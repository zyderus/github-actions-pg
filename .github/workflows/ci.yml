name: CI/CD Workflow

on:
  push:
    branches:
      - '**' # Runs tests on push to any branch
  pull_request:
    branches:
      - dev

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18
          cache: 'npm'

      - name: Cache node_modules
        id: cache-node-modules
        uses: actions/cache@v4
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-

      - name: Install dependencies
        if: steps.cache-node-modules.outputs.cache-hit != 'true'
        run: npm ci

      # âœ… Check that node_modules exists before uploading
      - name: Check node_modules content
        run: |
          ls -lah node_modules
          npm list

      - name: Check if Next.js is installed
        run: ls -lah node_modules/.bin/next

      - name: Save node_modules as artifact
        uses: actions/upload-artifact@v4
        with:
          name: node_modules
          path: node_modules

  lint:
    name: Lint Code
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Restore node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules
          path: node_modules

      - name: Run Linter
        run: npm run lint

  test:
    name: Run Tests
    runs-on: ubuntu-latest
    needs: install
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 18

      - name: Restore node_modules
        uses: actions/download-artifact@v4
        with:
          name: node_modules
          path: node_modules

      - name: Run Test
        run: npm run test

  deploy:
    name: Deploy Application
    needs: [lint, test]
    if: github.event_name == 'pull_request' && github.base_ref == 'dev'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

      - name: Deploy to Staging
        run: |
          echo "Deploying application from DEV to STAGING..."
